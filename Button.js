// Generated by CoffeeScript 2.3.1
(function() {
  var Button, m, s, style, u;

  m = require('mithril');

  s = require('mss-js');

  style = require('./style');

  u = require('./utils');

  Button = class Button {
    constructor({text, prefix, suffix, data = null, disabled: disabled = false, onClick: onClick = u.noOp}) { // HashMap // (HashMap) -> a
      this.onClickInternal = this.onClickInternal.bind(this);
      this.text = text; // String
      this.prefix = prefix; // mithril svg view
      this.suffix = suffix; // mithril svg view
      this.disabled = disabled;
      this.onClick = onClick;
      this.dataJSON = JSON.stringify(data);
    }

    onClickInternal(e) {
      var data, json;
      if (!this.disabled) {
        json = u.getCurrentTargetData(e, 'json');
        data = JSON.parse(json);
        return this.onClick(data);
      }
    }

    view() {
      var self;
      self = this;
      return m('.Button', {
        onclick: this.onClickInternal,
        'data-json': this.dataJSON,
        className: this.disabled ? 'Disabled' : ''
      }, m('.Prefix', this.prefix), m('span', this.text), m('.Suffix', this.suffix));
    }

  };

  Button.mss = {
    Button: s.LineSize('2em', '1em')({
      position: 'relative',
      width: '100px',
      textAlign: 'center',
      background: style.main[4],
      color: style.text[8],
      borderRadius: '0.1em',
      Prefix_Suffix: {
        position: 'absolute',
        svg: {
          fill: style.text[8],
          height: '1.4em',
          width: '1.4em'
        }
      },
      Prefix: {
        left: '0.3em',
        top: '0.3em'
      },
      Suffix: {
        right: '0.3em',
        top: '0.3em'
      },
      cursor: 'pointer',
      $hover: {
        background: style.main[5]
      }
    }),
    '.Button.Disabled': {
      background: style.border[4],
      cursor: 'not-allowed'
    }
  };

  module.exports = Button;

}).call(this);
