// Generated by CoffeeScript 1.12.7
(function() {
  var Button, m, s, style, u,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  m = require('mithril');

  s = require('mss-js');

  style = require('./style');

  u = require('./utils');

  Button = (function() {
    function Button(arg) {
      var data, ref, ref1, ref2;
      this.text = arg.text, this.prefix = arg.prefix, this.suffix = arg.suffix, data = (ref = arg.data) != null ? ref : null, this.disabled = (ref1 = arg.disabled) != null ? ref1 : false, this.onClick = (ref2 = arg.onClick) != null ? ref2 : u.noOp;
      this.onClickInternal = bind(this.onClickInternal, this);
      this.dataJSON = JSON.stringify(data);
    }

    Button.prototype.onClickInternal = function(e) {
      var data, json;
      if (!this.disabled) {
        json = u.getCurrentTargetData(e, 'json');
        data = JSON.parse(json);
        return this.onClick(data);
      }
    };

    Button.prototype.view = function() {
      var self;
      self = this;
      return m('.Button', {
        onclick: this.onClickInternal,
        'data-json': this.dataJSON,
        className: this.disabled ? 'Disabled' : ''
      }, m('.Prefix', this.prefix), m('span', this.text), m('.Suffix', this.suffix));
    };

    return Button;

  })();

  Button.mss = {
    Button: s.LineSize('2em', '1em')({
      position: 'relative',
      width: '100px',
      textAlign: 'center',
      background: style.main[4],
      color: style.text[8],
      borderRadius: '0.1em',
      Prefix_Suffix: {
        position: 'absolute',
        svg: {
          fill: style.text[8],
          height: '1.4em',
          width: '1.4em'
        }
      },
      Prefix: {
        left: '0.3em',
        top: '0.3em'
      },
      Suffix: {
        right: '0.3em',
        top: '0.3em'
      },
      cursor: 'pointer',
      $hover: {
        background: style.main[5]
      }
    }),
    '.Button.Disabled': {
      background: style.border[4],
      cursor: 'not-allowed'
    }
  };

  module.exports = Button;

}).call(this);
