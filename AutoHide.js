// Generated by CoffeeScript 1.10.0
(function() {
  var AutoHide, m,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  m = require('mithril');

  AutoHide = (function() {
    function AutoHide(arg) {
      var ref;
      this.widget = arg.widget, this.onHide = (ref = arg.onHide) != null ? ref : (function() {});
      this.hide = bind(this.hide, this);
      this.show = bind(this.show, this);
      this.showWidget = false;
    }

    AutoHide.prototype.hideInternal = function(elem) {
      return (function(_this) {
        return function(e) {
          if (!elem.contains(e.target)) {
            _this.showWidget = false;
          }
          m.redraw();
          _this.onHide();
          return true;
        };
      })(this);
    };

    AutoHide.prototype.show = function() {
      return this.showWidget = true;
    };

    AutoHide.prototype.hide = function() {
      this.showWidget = false;
      return this.onHide();
    };

    AutoHide.prototype.view = function() {
      var self;
      self = this;
      return m('.HideOnBlur', {
        config: function(elem, afterInit, context) {
          if (!afterInit) {
            window.addEventListener('click', self.hideInternal(elem), true);
            return context.onunload = function() {
              return window.removeEventListener('click', self.hideInternal(elem), true);
            };
          }
        }
      }, this.showWidget ? this.widget.view() : void 0);
    };

    return AutoHide;

  })();

  module.exports = AutoHide;

}).call(this);
