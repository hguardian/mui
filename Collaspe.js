// Generated by CoffeeScript 2.3.1
(function() {
  var Collaspe, arrowDown, arrowRight, m, s, style, u,
    indexOf = [].indexOf;

  m = require('mithril');

  s = require('mss-js');

  u = require('./utils');

  style = require('./style');

  arrowRight = require('mmsvg/google/msvg/hardware/keyboard-arrow-right');

  arrowDown = require('mmsvg/google/msvg/hardware/keyboard-arrow-down');

  Collaspe = class Collaspe {
    constructor({titleArray, widgetArray, autoCollaspe: autoCollaspe = false, expandedIndexArray: expandedIndexArray = [], onExpand: onExpand = u.noOp, onCollaspe: onCollaspe = u.noOp}) { // Boolean // Int -> a // Int -> a
      this.onFoldInternal = this.onFoldInternal.bind(this);
      this.titleArray = titleArray; // [String]
      this.widgetArray = widgetArray; // [mithril widget]
      this.autoCollaspe = autoCollaspe;
      this.expandedIndexArray = expandedIndexArray; // [Int]
      this.onExpand = onExpand;
      this.onCollaspe = onCollaspe;
      this.showWidget = false; // Boolean
    }

    onFoldInternal(e) {
      var i, j;
      i = parseInt(u.getCurrentTargetData(e, 'index'));
      if (this.autoCollaspe) {
        if ((j = this.expandedIndexArray[0]) != null) {
          this.onCollaspe(j);
        }
        this.expandedIndexArray = [i];
        return this.onExpand(i);
      } else if (indexOf.call(this.expandedIndexArray, i) >= 0) {
        u.removeFromArray(this.expandedIndexArray, i);
        return this.onCollaspe(i);
      } else {
        this.expandedIndexArray.push(i);
        return this.onExpand(i);
      }
    }

    view() {
      var expanded, i, self, title;
      self = this;
      return m('.Collaspe', (function() {
        var k, len, ref, results;
        ref = this.titleArray;
        results = [];
        for (i = k = 0, len = ref.length; k < len; i = ++k) {
          title = ref[i];
          expanded = indexOf.call(this.expandedIndexArray, i) >= 0;
          results.push([
            m('.CollaspeTitle',
            {
              key: 'title' + i,
              'data-index': i.toString(),
              onclick: this.onFoldInternal
            },
            expanded ? u.svg(arrowDown) : u.svg(arrowRight),
            m('span',
            title)),
            m('.CollaspeBody',
            {
              className: expanded ? 'Current' : '',
              key: 'body' + i,
              onclick: this.onFoldInternal
            },
            expanded ? this.widgetArray[i].view() : void 0)
          ]);
        }
        return results;
      }).call(this));
    }

  };

  Collaspe.mss = {
    Collaspe: {
      CollaspeTitle: s.LineSize('2em', '1em')({
        color: style.text[8],
        background: style.main[4],
        border: '1px solid ' + style.main[4],
        padding: '0 0.4em',
        $hover: {
          cursor: 'pointer'
        },
        svg: {
          fill: style.text[8],
          height: '1.4em',
          width: '1.4em',
          padding: '0.3em',
          verticalAlign: 'middle'
        },
        span: {
          verticalAlign: 'middle'
        }
      }),
      CollaspeBody: {
        border: '1px solid ' + style.border[4],
        borderTop: 'none'
      }
    }
  };

  module.exports = Collaspe;

}).call(this);
