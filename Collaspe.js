// Generated by CoffeeScript 1.10.0
(function() {
  var Collaspe, arrowDown, arrowRight, m, s, style, u,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  m = require('mithril');

  s = require('mss-js');

  u = require('./utils');

  style = require('./style');

  arrowRight = require('mmsvg/google/msvg/hardware/keyboard-arrow-right');

  arrowDown = require('mmsvg/google/msvg/hardware/keyboard-arrow-down');

  Collaspe = (function() {
    function Collaspe(arg) {
      var ref, ref1, ref2, ref3;
      this.titleArray = arg.titleArray, this.widgetArray = arg.widgetArray, this.autoCollaspe = (ref = arg.autoCollaspe) != null ? ref : false, this.expandedIndexArray = (ref1 = arg.expandedIndexArray) != null ? ref1 : [], this.onExpand = (ref2 = arg.onExpand) != null ? ref2 : (function() {}), this.onCollaspe = (ref3 = arg.onCollaspe) != null ? ref3 : (function() {});
      this.onFoldInternal = bind(this.onFoldInternal, this);
      this.showWidget = false;
    }

    Collaspe.prototype.onFoldInternal = function(e) {
      var i;
      i = parseInt(u.getCurrentTargetData(e, 'index'));
      if (this.autoCollaspe) {
        return this.expandedIndexArray = [i];
      } else if (indexOf.call(this.expandedIndexArray, i) >= 0) {
        return u.removeFromArray(this.expandedIndexArray, i);
      } else {
        return this.expandedIndexArray.push(i);
      }
    };

    Collaspe.prototype.view = function() {
      var expanded, i, self, title;
      self = this;
      return m('.Collaspe', (function() {
        var j, len, ref, results;
        ref = this.titleArray;
        results = [];
        for (i = j = 0, len = ref.length; j < len; i = ++j) {
          title = ref[i];
          expanded = indexOf.call(this.expandedIndexArray, i) >= 0;
          results.push([
            m('.CollaspeTitle', {
              key: 'title' + i,
              'data-index': i.toString(),
              onclick: this.onFoldInternal
            }, expanded ? u.svg(arrowDown) : u.svg(arrowRight), m('span', title)), m('.CollaspeBody', {
              className: expanded ? 'Current' : '',
              key: 'body' + i,
              onclick: this.onFoldInternal
            }, expanded ? this.widgetArray[i].view() : void 0)
          ]);
        }
        return results;
      }).call(this));
    };

    return Collaspe;

  })();

  Collaspe.mss = {
    Collaspe: {
      CollaspeTitle: s.LineSize('2em', '1em')({
        color: style.text[8],
        background: style.main[4],
        border: '1px solid ' + style.main[4],
        padding: '0 0.4em',
        $hover: {
          cursor: 'pointer'
        },
        svg: {
          fill: style.text[8],
          height: '1.4em',
          width: '1.4em',
          padding: '0.3em',
          verticalAlign: 'middle'
        },
        span: {
          verticalAlign: 'middle'
        }
      }),
      CollaspeBody: {
        border: '1px solid ' + style.border[4],
        borderTop: 'none'
      }
    }
  };

  module.exports = Collaspe;

}).call(this);
